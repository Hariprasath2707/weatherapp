name: Build and deploy Python app to Azure Web App

env:
  AZURE_WEBAPP_NAME: my-weather-app  # Replace with your actual Azure Web App name
  PYTHON_VERSION: '3.8'              # Change this if needed

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read  # Gives the workflow permission to read the contents of the repository

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python version
        uses: actions/setup-python@v3.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'  # Caches pip dependencies for faster builds

      # Step 3: Create and activate virtual environment
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate  # Activate the virtual environment

      # Step 4: Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add your tests here if you have any (e.g., PyTest, Django tests)

      # Step 5: Upload artifact (the project files except venv)
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app  # Name of the artifact to be uploaded
          path: |
            .  # Include all project files
            !venv/  # Exclude the virtual environment

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the successful completion of the build job
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}  # Store the deployed app's URL

    steps:
      # Step 1: Download the artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app  # The artifact name must match the one in the upload-artifact step
          path: .  # Specify the directory where you want to download the artifact

      # Step 2: Deploy to Azure Web App
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}  # Set your Azure Web App name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # GitHub secret for Azure publish profile
          Uploading artifact: python-app
          Downloading artifact: python-app


